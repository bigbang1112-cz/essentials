// <auto-generated />
using System;
using BigBang1112.DiscordBot.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BigBang1112.DiscordBot.Migrations
{
    [DbContext(typeof(DiscordBotContext))]
    [Migration("20220317000051_AddMemes")]
    partial class AddMemes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BigBang1112.DiscordBot.Models.Db.DiscordBotCommandVisibilityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ChannelId")
                        .HasColumnType("int");

                    b.Property<int>("JoinedGuildId")
                        .HasColumnType("int");

                    b.Property<bool>("Visibility")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("ChannelId");

                    b.HasIndex("JoinedGuildId");

                    b.ToTable("DiscordBotCommandVisibilities");
                });

            modelBuilder.Entity("BigBang1112.DiscordBot.Models.Db.DiscordBotGuildModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<ulong>("Snowflake")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("Id");

                    b.ToTable("DiscordBotGuilds");
                });

            modelBuilder.Entity("BigBang1112.DiscordBot.Models.Db.DiscordBotChannelModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("GuildId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<ulong>("Snowflake")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.ToTable("DiscordBotChannels");
                });

            modelBuilder.Entity("BigBang1112.DiscordBot.Models.Db.DiscordBotJoinedGuildModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BotId")
                        .HasColumnType("int");

                    b.Property<bool>("CommandVisibility")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("GuildId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BotId");

                    b.HasIndex("GuildId");

                    b.ToTable("DiscordBotJoinedGuilds");
                });

            modelBuilder.Entity("BigBang1112.DiscordBot.Models.Db.DiscordBotModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("DiscordBots");
                });

            modelBuilder.Entity("BigBang1112.DiscordBot.Models.Db.MemeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("AddedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Attachment")
                        .HasColumnType("longtext");

                    b.Property<ulong?>("AuthorSnowflake")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)");

                    b.Property<int>("JoinedGuildId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JoinedGuildId");

                    b.ToTable("Memes");
                });

            modelBuilder.Entity("BigBang1112.DiscordBot.Models.Db.DiscordBotCommandVisibilityModel", b =>
                {
                    b.HasOne("BigBang1112.DiscordBot.Models.Db.DiscordBotChannelModel", "Channel")
                        .WithMany()
                        .HasForeignKey("ChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BigBang1112.DiscordBot.Models.Db.DiscordBotJoinedGuildModel", "JoinedGuild")
                        .WithMany("CommandVisibilities")
                        .HasForeignKey("JoinedGuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Channel");

                    b.Navigation("JoinedGuild");
                });

            modelBuilder.Entity("BigBang1112.DiscordBot.Models.Db.DiscordBotChannelModel", b =>
                {
                    b.HasOne("BigBang1112.DiscordBot.Models.Db.DiscordBotGuildModel", "Guild")
                        .WithMany("Channels")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("BigBang1112.DiscordBot.Models.Db.DiscordBotJoinedGuildModel", b =>
                {
                    b.HasOne("BigBang1112.DiscordBot.Models.Db.DiscordBotModel", "Bot")
                        .WithMany("JoinedGuilds")
                        .HasForeignKey("BotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BigBang1112.DiscordBot.Models.Db.DiscordBotGuildModel", "Guild")
                        .WithMany()
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bot");

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("BigBang1112.DiscordBot.Models.Db.MemeModel", b =>
                {
                    b.HasOne("BigBang1112.DiscordBot.Models.Db.DiscordBotJoinedGuildModel", "JoinedGuild")
                        .WithMany()
                        .HasForeignKey("JoinedGuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JoinedGuild");
                });

            modelBuilder.Entity("BigBang1112.DiscordBot.Models.Db.DiscordBotGuildModel", b =>
                {
                    b.Navigation("Channels");
                });

            modelBuilder.Entity("BigBang1112.DiscordBot.Models.Db.DiscordBotJoinedGuildModel", b =>
                {
                    b.Navigation("CommandVisibilities");
                });

            modelBuilder.Entity("BigBang1112.DiscordBot.Models.Db.DiscordBotModel", b =>
                {
                    b.Navigation("JoinedGuilds");
                });
#pragma warning restore 612, 618
        }
    }
}
